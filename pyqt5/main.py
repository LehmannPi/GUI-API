# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'test.ui'
#
# Created by: PyQt5 UI code generator 5.15.2
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.


from PyQt5 import QtCore, QtGui, QtWidgets
import requests


class Ui_MainWindow(object):
    def setupUi(self, MainWindow):
        MainWindow.setObjectName("MainWindow")
        MainWindow.resize(641, 480)
        MainWindow.setStyleSheet("")
        self.centralwidget = QtWidgets.QWidget(MainWindow)
        self.centralwidget.setAutoFillBackground(False)
        self.centralwidget.setStyleSheet("")
        self.centralwidget.setObjectName("centralwidget")
        self.tabWidget = QtWidgets.QTabWidget(self.centralwidget)
        self.tabWidget.setGeometry(QtCore.QRect(0, 0, 641, 461))
        self.tabWidget.setStyleSheet("")
        self.tabWidget.setObjectName("tabWidget")
        self.tab = QtWidgets.QWidget()
        self.tab.setObjectName("tab")
        self.groupBox = QtWidgets.QGroupBox(self.tab)
        self.groupBox.setGeometry(QtCore.QRect(200, 20, 231, 89))
        self.groupBox.setStyleSheet("")
        self.groupBox.setObjectName("groupBox")
        self.lineEdit = QtWidgets.QLineEdit(self.groupBox)
        self.lineEdit.setGeometry(QtCore.QRect(10, 20, 201, 20))
        self.lineEdit.setObjectName("lineEdit")
        self.pushButton = QtWidgets.QPushButton(self.groupBox)
        self.pushButton.setGeometry(QtCore.QRect(130, 50, 75, 23))
        self.pushButton.setDefault(True)
        self.pushButton.setFlat(False)
        self.pushButton.setObjectName("pushButton")
        self.textEdit = QtWidgets.QTextEdit(self.tab)
        self.textEdit.setGeometry(QtCore.QRect(190, 160, 256, 192))
        self.textEdit.setStyleSheet("")
        self.textEdit.setObjectName("textEdit")
        self.bck_1 = QtWidgets.QLabel(self.tab)
        self.bck_1.setGeometry(QtCore.QRect(-10, 0, 651, 441))
        self.bck_1.setText("")
        self.bck_1.setPixmap(QtGui.QPixmap("wapp.png"))
        self.bck_1.setObjectName("bck_1")
        self.bck_1.raise_()
        self.groupBox.raise_()
        self.textEdit.raise_()
        self.tabWidget.addTab(self.tab, "")
        self.tab_2 = QtWidgets.QWidget()
        self.tab_2.setObjectName("tab_2")
        self.graphicsView = QtWidgets.QGraphicsView(self.tab_2)
        self.graphicsView.setGeometry(QtCore.QRect(170, 70, 301, 251))
        self.graphicsView.setStyleSheet("")
        self.graphicsView.setObjectName("graphicsView")
        self.bck_2 = QtWidgets.QLabel(self.tab_2)
        self.bck_2.setGeometry(QtCore.QRect(-10, 0, 651, 441))
        self.bck_2.setText("")
        self.bck_2.setPixmap(QtGui.QPixmap("wapp.png"))
        self.bck_2.setObjectName("bck_2")
        self.bck_2.raise_()
        self.graphicsView.raise_()
        self.tabWidget.addTab(self.tab_2, "")
        MainWindow.setCentralWidget(self.centralwidget)
        self.statusbar = QtWidgets.QStatusBar(MainWindow)
        self.statusbar.setObjectName("statusbar")
        MainWindow.setStatusBar(self.statusbar)
        self.actionGPS_View = QtWidgets.QAction(MainWindow)
        self.actionGPS_View.setObjectName("actionGPS_View")

        self.retranslateUi(MainWindow)
        self.tabWidget.setCurrentIndex(0)
        QtCore.QMetaObject.connectSlotsByName(MainWindow)

        self.pushButton.clicked.connect(self.show_weather)

    def retranslateUi(self, MainWindow):
        _translate = QtCore.QCoreApplication.translate
        MainWindow.setWindowTitle(_translate("MainWindow", "Weather App"))
        self.groupBox.setTitle(_translate("MainWindow", "City"))
        self.pushButton.setText(_translate("MainWindow", "Search"))
        self.textEdit.setWhatsThis(_translate("MainWindow", "<html><head/><body><p><br/></p></body></html>"))
        self.textEdit.setHtml(_translate("MainWindow", "<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.0//EN\" \"http://www.w3.org/TR/REC-html40/strict.dtd\">\n"
"<html><head><meta name=\"qrichtext\" content=\"1\" /><style type=\"text/css\">\n"
"p, li { white-space: pre-wrap; }\n"
"</style></head><body style=\" font-family:\'MS Shell Dlg 2\'; font-size:8.25pt; font-weight:400; font-style:normal;\">\n"
"<p align=\"center\" style=\"-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><br /></p></body></html>"))
        self.tabWidget.setTabText(self.tabWidget.indexOf(self.tab), _translate("MainWindow", "Weather"))
        self.tabWidget.setTabText(self.tabWidget.indexOf(self.tab_2), _translate("MainWindow", "Map"))
        self.actionGPS_View.setText(_translate("MainWindow", "GPS View"))

    def format_weather(self, weather):
        try:
            name = weather['name']
            cntr = weather['sys']['country']
            desc = (weather['weather'][0]['description']).capitalize()
            temp = weather['main']['temp']
            t_min = weather['main']['temp_min']
            t_max = weather['main']['temp_max']
            hum = weather['main']['humidity']
            
            fin_str = 'City: %s / %s \nCondition: %s \nTemperature: %s ºC ( %s / %s ) ºC \nHumidity: %s%% '%(name,cntr,desc,temp,t_min,t_max,hum)
        except:
            fin_str = 'There was a problem retrieving info.'
        return fin_str

    def get_weather(self, city):
        api_file = open('api-key.txt', 'r')
        weather_key = api_file.read()
        api_file.close()
        url = 'https://api.openweathermap.org/data/2.5/weather'
        params = {'APPID': weather_key, 'q': city, 'units': 'metric'}
        response = requests.get(url,params=params)
        weather = response.json()
        return self.format_weather(weather)


    def show_weather(self):
        city = self.lineEdit.text()
        self.textEdit.setPlainText(self.get_weather(city))


if __name__ == "__main__":
    import sys
    app = QtWidgets.QApplication(sys.argv)
    MainWindow = QtWidgets.QMainWindow()
    ui = Ui_MainWindow()
    ui.setupUi(MainWindow)
    MainWindow.show()
    sys.exit(app.exec_())
